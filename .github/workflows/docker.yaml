name: CI - Build, Scan, and Push Docker

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-scan-docker:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Java
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      # 3. SonarQube Scan
     # - name: SonarQube Scan
     #   run: |
      #    mvn -B verify sonar:sonar \
       #     -Dsonar.projectKey=web-calci \
        #    -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} \
         #   -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      # 4. Build with Maven (after scan)
      - name: Build with Maven
        run: mvn -B -ntp package

      # 5. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Build Docker image (locally first)
      - name: Build Docker image
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/web-calci
          docker build -t $IMAGE:latest -t $IMAGE:${{ github.sha }} .
      # 7. Trivy Scan (before pushing)
      - name: Trivy Scan Docker image
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/web-calci:latest
          format: 'table'
          exit-code: '0'    # donâ€™t fail build on vulnerabilities
          ignore-unfixed: true

      # 8. Push Docker image
      - name: Push Docker image
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/web-calci
          docker push $IMAGE:latest
          docker push $IMAGE:${{ github.sha }}
